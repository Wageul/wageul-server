package com.wageul.wageul_server.mock;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.wageul.wageul_server.experience.domain.Experience;
import com.wageul.wageul_server.participation.domain.Participation;
import com.wageul.wageul_server.participation.service.port.ParticipationRepository;
import com.wageul.wageul_server.user.domain.User;

public class FakeParticipationRepository implements ParticipationRepository {

	private Long autoGeneratedId = 0L;
	private final List<Participation> data = new ArrayList<>();

	@Override
	public Optional<Participation> findById(long id) {
		return data.stream().filter(item -> item.getId() == id).findAny();
	}

	@Override
	public List<Participation> findAll() {
		return data;
	}

	@Override
	public Participation save(Participation participation) {
		if(participation.getId() == 0) {
			Participation newParticipation = Participation.builder()
				.id(++autoGeneratedId)
				.user(participation.getUser())
				.experience(participation.getExperience())
				.createdAt(LocalDateTime.now())
				.build();
			data.add(newParticipation);
			return newParticipation;
		} else {
			data.removeIf(item -> Objects.equals(item.getId(), participation.getId()));
			data.add(participation);
			return participation;
		}
	}

	@Override
	public Long countByUserIdAndExperienceId(long userId, long experienceId) {
		return (long) data
			.stream()
			.map(item -> item.getUser().getId() == userId && item.getExperience().getId() == experienceId)
			.toList()
			.size();
	}

	@Override
	public void delete(Participation participation) {
		data.removeIf(item -> Objects.equals(item.getId(), participation.getId()));
	}

	@Override
	public List<Participation> findByUser(User user) {
		return data.stream().filter(item -> item.getUser().equals(user)).toList();
	}

	@Override
	public List<Participation> findByExperience(Experience experience) {
		return data.stream().filter(item -> item.getExperience().equals(experience)).toList();
	}
}
