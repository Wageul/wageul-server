package com.wageul.wageul_server.mock;

import com.wageul.wageul_server.user.domain.User;
import com.wageul.wageul_server.user.service.port.UserRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class FakeUserRepository implements UserRepository {

    private Long autoGeneratedId = 0L;
    private final List<User> data = new ArrayList<>();

    @Override
    public Optional<User> findByEmail(String email) {
        return data.stream().filter(item -> item.getEmail().equals(email)).findAny();
    }

    @Override
    public Optional<User> findByUsername(String username) {
        return data.stream().filter(item -> item.getUsername().equals(username)).findAny();
    }

    @Override
    public User getById(long id) {
        return findById(id).orElseThrow(() -> new RuntimeException("users에 id가 일치하는 것이 없습니다."));
    }

    @Override
    public Optional<User> findById(long id) {
        return data.stream().filter(item -> item.getId() == id).findAny();
    }

    @Override
    public User save(User user) {
        if (user.getId() == 0) {
            User newUser = User.builder()
                    .id(++autoGeneratedId)
                    .email(user.getEmail())
                    .profileImg(user.getProfileImg())
                    .name(user.getName())
                    .nationality(user.getNationality())
                    .introduce(user.getIntroduce())
                    .build();
            data.add(newUser);
            return newUser;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), user.getId()));
            data.add(user);
            return user;
        }
    }
}
